@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860

*@
@{
    Layout = null;
}
@using System.Text.RegularExpressions;
@model article
@{

    var article = Model;
    string content = Model.Contents == null ? "" : Model.Contents;
    content = Regex.Replace(content, @"<img\b[^>]*>", ""); //刪掉img標籤
    content = Regex.Replace(content, @"<(?!span\b)[^>]+>", "<span>");
}
@functions {
    public string FormatPublishTime(DateTime? publishTime)
    {
        if (!publishTime.HasValue)
            return "未知";

        var now = DateTime.Now;
        var difference = now.Subtract(publishTime.Value);

        // 若日期在1分钟内，则返回"剛剛"
        if (difference.TotalMinutes < 1)
            return "剛剛";

        // 如果日期在1分钟以上，且小于1小时，则返回分钟前缀的字符串
        if (difference.TotalMinutes < 60)
            return $"{difference.Minutes} 分鐘前";

        // 如果日期在1小时以上，且小于1天，则返回小时前缀的字符串
        if (difference.TotalHours < 24)
            return $"{difference.Hours} 小時前";

        // 如果日期在1天以上但不到7天，则返回天数前缀的字符串
        if (difference.TotalDays < 7)
            return $"{difference.Days} 天前";

        // 若日期超过7天，且小于365天，则返回完整的年、月、日
        if (difference.TotalDays < 365)
            return publishTime.Value.ToString("M 月 d 日");

        // 若日期超过一年，则返回完整的年、月、日
        return publishTime.Value.ToString("yyyy 年 M 月 d 日");
    }
}

<style>
    .outerDiv {
        display: flex;
        width: fit-content;
        height: fit-content;
    }

    .inner1 {
        flex-grow: 1;
        width: fit-content;
        height: fit-content;
    }

    .inner2 {
        width: fit-content;
        height: fit-content;
        margin-left: 10px;
    }

    .titleContainer {
        overflow: hidden; /* 隐藏溢出内容 */
        margin-bottom: 5px;
        padding: 0px;
    }

    .partialViewTitle {
        font-weight: bold;
        font-size: 23px;
        white-space: nowrap; /* 禁止换行 */
        overflow: hidden; /* 隐藏溢出内容 */
        text-overflow: ellipsis; /* 显示省略号 */
        cursor: pointer;
        margin: 0px;
        padding: 0px;
        letter-spacing: 1px;
        color: #01579b;
        max-width: 17em; /* 設定最大寬度，17個字的寬度 */
    }

        .partialViewTitle:hover {
            text-decoration: underline;
        }

    .partialViewSubTitle {
        font-size: 16px;
        /* font-weight: bold; */
        white-space: nowrap; /* 禁止换行 */
        overflow: hidden; /* 隐藏溢出内容 */
        text-overflow: ellipsis; /* 显示省略号 */
        margin: 0px;
        padding: 0px;
        letter-spacing: 1px;
        color: gray;
        max-width: 24em;
    }

        .partialViewSubTitle:empty {
            margin-top: 16px;
        }

    .articleContent {
        display: -webkit-box; /* 使用 flexbox */
        -webkit-box-orient: vertical; /* 垂直方向 */
        overflow: hidden; /* 超出部分隱藏 */
        -webkit-line-clamp: 3; /* 指定顯示的行數 */
        width: 400px;
        margin: 10px 0px 0px 0px;
    }

        .articleContent span {
            font-size: 14px;
            margin: 0;
            padding: 0;
            line-height: 2;
            width: 400px;
        }

    .articleImage {
        width: 150px;
        height: 150px;
        border-radius: 10px;
        object-fit: cover;
        transition: transform 0.3s ease; /* 添加动画过渡效果 */
        overflow: hidden; /* 隐藏溢出内容 */
    }

        .articleImage:hover {
            transform: translateY(-5px); /* 图片向上跳动 5px */
        }

    .partialViewContainer {
        cursor: pointer;
    }

    .partialViewTime {
        color: gray;
        font-size: 13px;
    }
</style>

<div onclick="articleView(@article.ArticleId)" class="partialViewContainer container">
    <div>
        <span class="partialViewTime">發佈時間：@FormatPublishTime(@article.PublishTime)</span>
    </div>
    <div class="outerDiv">
        <div class="leftDiv">
            <div class="titleContainer">
                <div class="partialViewTitle">@article.Title</div>
                <div class="partialViewSubTitle">@article.Subtitle</div>
            </div>
            <div class="inner1">
                <div class="articleContent articleContent_@article.ArticleId ">
                </div>
            </div>
        </div>
        <div class="rightDiv">
            <div class="inner2">
                <img src="@article.Images" class="articleImage" />
            </div>
        </div>
    </div>
</div>





<script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4=" crossorigin="anonymous"></script>
@* <script src="~/lib/_js/jquery-3.6.0.js"></script> *@
<script src="https://cdn.tiny.cloud/1/cx5w3vy6l6bg0senjow539pjj585n4wqopo9s4r3viuyx88c/tinymce/6/tinymce.min.js"
        referrerpolicy="origin"></script>
<script>
    var backendData_@article.ArticleId = @Html.Raw(Json.Serialize(content));
    if (backendData_@article.ArticleId == null) {
                        backendData_@article.ArticleId = "";
    }
    console.log(backendData_@article.ArticleId);
    $(function () {
        $('.articleContent_@article.ArticleId').html(backendData_@article.ArticleId);

    });
    function articleView(articleId) {
        window.location = '/Article/ArticleView?articleId=' + articleId;
    }
</script>