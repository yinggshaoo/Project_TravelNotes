@model List<FriendRequest>
<style>
    #friendList {
        border-radius: 50px;
        background-color: whitesmoke;
    }


    .friendListUnit {
        position: relative;
        border: 1px solid black;
    }

    #friendList div:first-child {
        border-radius: 50px 50px 0 0;
    }

    #friendList div:last-child {
        border-radius: 0 0 50px 50px;
    }

    .friendListUnit:hover {
        background-color: antiquewhite;
        transition: 0.3s;
    }

    .friendListUnit:not(:hover) {
        background-color: whitesmoke;
        transition: 0.3s;
    }

    .friendListUnit > * {
        margin: 1rem;
    }
</style>
<h1>交友邀請</h1>
<div id="friendList">
    @if (Model.Count() == 0)
    {
        <p>尚無邀請</p>
    }
    @foreach (var item in Model)
    {
        <div class="friendListUnit">
            <p>序列號:@item.uuid</p>
            @switch (item.Status)
            {
                case 1:
                    <p>已接受</p>
                    break;
                case 0:
                    <p>已送出</p>
                    break;
                case -1:
                    <p>已拒絕</p>
                    break;
                default:
                    <p>內部伺服器錯誤</p>
                    break;
            }
            <p>送出者:@item.SenderUserId</p>
            <a href="/PersonalPage/PersonalPage/?userId=@item.SenderUserId">前往個人頁</a>
            @*<p>受邀者:@item.ReceiverUserId</p>*@
            @{
                string userId;
                ViewContext.HttpContext.Request.Cookies.TryGetValue("UsernameCookie", out userId);
            }
            @if (item.Status == 0 && userId == ViewContext.HttpContext.Request.Path.Value?.Split("/")[2])
            {
                <button class="acceptFriendRequest">接受邀請</button>
            }
        </div>
    }
</div>
@*勿動*@
@*<script src="~/js/FriendRequest.js" defer></script>*@
<script defer>
    if (document.getElementById("friendList").children.length == 1) {
        document.querySelector(".friendListUnit").style = "border-radius: 50px;";
    }
    // 批量對邀請列表的所有接受邀請按鈕添加事件監聽
    document.getElementById("friendList").addEventListener("click", (e) => {
        if (e.target.classList.contains("acceptFriendRequest")) {
            fetch("/api/Friend", {
                method: "POST",
                headers: {
                    "Accept": "application/json",
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
    @{
        string userid;
        ViewContext.HttpContext.Request.Cookies.TryGetValue("UsernameCookie", out userid);
    }
                    UserId: parseInt(@userid),
                    FriendId: parseInt(e.target.previousElementSibling.previousElementSibling.innerText.split(":")[1]),
                    Status: true
                    })
        }).then(res => {
            return res.json();
        }).then(ret => {
            e.target.innerText = ret.message;
        });
            }
        });
</script>